//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "UFPrincipal.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
//Auxiliares


//Algoritmos Numericos
Byte sumadig(Cardinal num){
	return (num==0) ? 0 : (num%10) + sumadig(num/10);
}

Byte sumarPar(Cardinal num){
Byte dig;
	if(num>0){
		dig=num%10;
		num = sumarPar(num/10);
			if(dig%2==0) num+=dig;
	}
	return num;
}

Byte sumarImpar(Cardinal num){
Byte dig;
	if(num>0){
		dig = num%10;
		num = sumarImpar(num/10);
			if(dig%2!=0) num+=dig;
	}
	return num;
}

bool esPrimo(Cardinal num){

	if (true) {

	} else{

	}
    return true;
}

Byte cantDig(Cardinal num){
Byte contador;
	if(num<10) contador = 1;
	else {
		contador = cantDig(num/10);
			contador++;
    }
	return contador;
}

Byte contarPar(Cardinal num){
Byte contador;
	if (num<10)
		contador = (num%2==0) ? 1 : 0;
	 else {
		contador = contarPar(num/10);
			if((num%10)%2==0 && (num%10)!=0  ) contador++;
	}
	return contador;
}

Byte contarImpar(Cardinal num){
Byte contador;
	if(num<10){
		contador = (num%2!=0) ? 1 : 0;
	}else{
		contador = contarImpar(num/10);
			if((num%10)%2!=0 && (num%10)!=0  ) contador++;
	}
	return contador;
}

Byte digMayor(Cardinal num){
Byte mayor;
	if(num<10)
		mayor=num;
	else{
		mayor = digMayor(num/10);
			if (num%10>mayor) mayor=num%10;
	}
 return mayor;
}


//Algoritos con Cadenas

//Algoritmos con Vectores

//Algoritmos con Matrices


//---------------------------------------------------------------------------

void __fastcall TForm1::SumaDigClick(TObject *Sender)
{
	Cardinal num = StrToInt(Ed1->Text);
	Byte res = sumadig(num);
	ShowMessage(res);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::ContarDigitosPares1Click(TObject *Sender)
{
	Cardinal num = StrToInt(Ed1->Text);
	Byte res = contarPar(num);
	ShowMessage(res);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SumarDigitosPares1Click(TObject *Sender)
{
	Cardinal num = StrToInt(Ed1->Text);
	Byte res = sumarPar(num);
	ShowMessage(res);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SumarDigitosImpares1Click(TObject *Sender)
{
    Cardinal num = StrToInt(Ed1->Text);
	Byte res = sumarImpar(num);
	ShowMessage(res);

}
//---------------------------------------------------------------------------

void __fastcall TForm1::EsPrimo1Click(TObject *Sender)
{
	Cardinal num = StrToInt(Ed1->Text);
	if (esPrimo(num)) {
		ShowMessage("Es Primo");
	} else {
		ShowMessage("No es Primo");
    }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::CantidadDigitosClick(TObject *Sender)
{
	Cardinal num=StrToInt(Ed1->Text);
	Byte res = cantDig(num);
	ShowMessage(res);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::ContarDigitosImpares1Click(TObject *Sender)
{
	Cardinal num = StrToInt(Ed1->Text);
	Byte res = contarImpar(num);
	ShowMessage(res);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::RetornarDigitoMayor1Click(TObject *Sender)
{
    Cardinal num = StrToInt(Ed1->Text);
	Byte res = digMayor(num);
	ShowMessage(res);

}
//---------------------------------------------------------------------------

